<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic initializer for 'UNDEFINED_EVENT''</FUNCTION>
    <DECORATED>??__EUNDEFINED_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic atexit destructor for 'UNDEFINED_EVENT''</FUNCTION>
    <DECORATED>??__FUNDEFINED_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>eventstep.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic initializer for 'STEP_EVENT''</FUNCTION>
    <DECORATED>??__ESTEP_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>eventstep.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic atexit destructor for 'STEP_EVENT''</FUNCTION>
    <DECORATED>??__FSTEP_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>eventstep.cpp</FILENAME>
      <LINE>10</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::EventStep::{ctor}</FUNCTION>
    <DECORATED>??0EventStep@df@@QEAA@XZ</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>eventstep.cpp</FILENAME>
      <LINE>20</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::EventStep::setStepCount' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::EventStep::setStepCount</FUNCTION>
    <DECORATED>?setStepCount@EventStep@df@@QEAAXH@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>eventstep.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::EventStep::getStepCount' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::EventStep::getStepCount</FUNCTION>
    <DECORATED>?getStepCount@EventStep@df@@QEBAHXZ</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>