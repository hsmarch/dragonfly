<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic initializer for 'UNDEFINED_EVENT''</FUNCTION>
    <DECORATED>??__EUNDEFINED_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic atexit destructor for 'UNDEFINED_EVENT''</FUNCTION>
    <DECORATED>??__FUNDEFINED_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'ObjectList::list' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>ObjectList::{ctor}</FUNCTION>
    <DECORATED>??0ObjectList@@QEAA@XZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::{ctor}</FUNCTION>
    <DECORATED>??0ObjectList@@QEAA@XZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '80048' bytes of stack:  exceeds /analyze:stacksize '16384'.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>ObjectList::+</FUNCTION>
    <DECORATED>??HObjectList@@QEAA?AV0@V0@@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>17</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 1 'p_o.{vfptr}' in call to 'ObjectList::insert' may be invalid (lifetime.1).</DESCRIPTION>
    <FUNCTION>ObjectList::+</FUNCTION>
    <DECORATED>??HObjectList@@QEAA?AV0@V0@@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
        <FILENAME>objectlist.cpp</FILENAME>
        <LINE>16</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>ObjectList::insert</FUNCTION>
    <DECORATED>?insert@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ObjectList::insert</FUNCTION>
    <DECORATED>?insert@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::insert' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::insert</FUNCTION>
    <DECORATED>?insert@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26461</DEFECTCODE>
    <DESCRIPTION>The pointer argument 'p_o' for function 'ObjectList::remove' can be marked as a pointer to const (con.3).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::remove' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::clear' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::clear</FUNCTION>
    <DECORATED>?clear@ObjectList@@QEAAXXZ</DECORATED>
    <FUNCLINE>44</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::getCount' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::getCount</FUNCTION>
    <DECORATED>?getCount@ObjectList@@QEBAHXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::isEmpty' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::isEmpty</FUNCTION>
    <DECORATED>?isEmpty@ObjectList@@QEBA_NXZ</DECORATED>
    <FUNCLINE>52</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::isFull' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::isFull</FUNCTION>
    <DECORATED>?isFull@ObjectList@@QEBA_NXZ</DECORATED>
    <FUNCLINE>58</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>