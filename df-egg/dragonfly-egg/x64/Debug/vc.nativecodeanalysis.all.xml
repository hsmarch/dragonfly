<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>clock.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Clock::{ctor}</FUNCTION>
    <DECORATED>??0Clock@@QEAA@XZ</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>clock.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'current_time' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>Clock::delta</FUNCTION>
    <DECORATED>?delta@Clock@@QEAAJXZ</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>clock.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'return_time' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>Clock::delta</FUNCTION>
    <DECORATED>?delta@Clock@@QEAAJXZ</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>clock.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Clock::delta' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Clock::delta</FUNCTION>
    <DECORATED>?delta@Clock@@QEAAJXZ</DECORATED>
    <FUNCLINE>23</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>clock.cpp</FILENAME>
      <LINE>37</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'current_time' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>Clock::split</FUNCTION>
    <DECORATED>?split@Clock@@QEBAJXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>clock.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'return_time' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>Clock::split</FUNCTION>
    <DECORATED>?split@Clock@@QEBAJXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>clock.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Clock::split' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Clock::split</FUNCTION>
    <DECORATED>?split@Clock@@QEBAJXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic initializer for 'UNDEFINED_EVENT''</FUNCTION>
    <DECORATED>??__EUNDEFINED_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic atexit destructor for 'UNDEFINED_EVENT''</FUNCTION>
    <DECORATED>??__FUNDEFINED_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'event_type''</FUNCTION>
    <DECORATED>??__Eevent_type@@YAXXZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic atexit destructor for 'event_type''</FUNCTION>
    <DECORATED>??__Fevent_type@@YAXXZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.cpp</FILENAME>
      <LINE>10</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Event::{ctor}</FUNCTION>
    <DECORATED>??0Event@df@@QEAA@XZ</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class df::Event', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>df::Event::{dtor}</FUNCTION>
    <DECORATED>??1Event@df@@UEAA@XZ</DECORATED>
    <FUNCLINE>15</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>eventstep.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic initializer for 'STEP_EVENT''</FUNCTION>
    <DECORATED>??__ESTEP_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>eventstep.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic atexit destructor for 'STEP_EVENT''</FUNCTION>
    <DECORATED>??__FSTEP_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>eventstep.cpp</FILENAME>
      <LINE>10</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::EventStep::{ctor}</FUNCTION>
    <DECORATED>??0EventStep@df@@QEAA@XZ</DECORATED>
    <FUNCLINE>10</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>eventstep.cpp</FILENAME>
      <LINE>20</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::EventStep::setStepCount' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::EventStep::setStepCount</FUNCTION>
    <DECORATED>?setStepCount@EventStep@df@@QEAAXH@Z</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>eventstep.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::EventStep::getStepCount' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::EventStep::getStepCount</FUNCTION>
    <DECORATED>?getStepCount@EventStep@df@@QEBAHXZ</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.h</FILENAME>
      <LINE>11</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic initializer for 'LOGFILE_NAME''</FUNCTION>
    <DECORATED>??__ELOGFILE_NAME@df@@YAXXZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.h</FILENAME>
      <LINE>11</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic atexit destructor for 'LOGFILE_NAME''</FUNCTION>
    <DECORATED>??__FLOGFILE_NAME@df@@YAXXZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::GameManager::{ctor}</FUNCTION>
    <DECORATED>??0GameManager@df@@AEAA@XZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'df::GameManager::startUp' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>df::GameManager::startUp</FUNCTION>
    <DECORATED>?startUp@GameManager@df@@UEAAHXZ</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'df::GameManager::shutDown' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>df::GameManager::shutDown</FUNCTION>
    <DECORATED>?shutDown@GameManager@df@@UEAAXXZ</DECORATED>
    <FUNCLINE>38</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'loop_time' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>df::GameManager::run</FUNCTION>
    <DECORATED>?run@GameManager@df@@QEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>51</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'intended_sleep_time' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>df::GameManager::run</FUNCTION>
    <DECORATED>?run@GameManager@df@@QEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26494</DEFECTCODE>
    <DESCRIPTION>Variable 'actual_sleep_time' is uninitialized. Always initialize an object (type.5).</DESCRIPTION>
    <FUNCTION>df::GameManager::run</FUNCTION>
    <DECORATED>?run@GameManager@df@@QEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>df::GameManager::run</FUNCTION>
    <DECORATED>?run@GameManager@df@@QEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>df::GameManager::run</FUNCTION>
    <DECORATED>?run@GameManager@df@@QEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>60</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>df::GameManager::run</FUNCTION>
    <DECORATED>?run@GameManager@df@@QEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>60</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>df::GameManager::run</FUNCTION>
    <DECORATED>?run@GameManager@df@@QEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>54</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'l_mngr' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>df::GameManager::run</FUNCTION>
    <DECORATED>?run@GameManager@df@@QEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>60</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 's' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>df::GameManager::run</FUNCTION>
    <DECORATED>?run@GameManager@df@@QEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::GameManager::setGameOver' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::GameManager::setGameOver</FUNCTION>
    <DECORATED>?setGameOver@GameManager@df@@QEAAX_N@Z</DECORATED>
    <FUNCLINE>76</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>80</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::GameManager::getGameOver' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::GameManager::getGameOver</FUNCTION>
    <DECORATED>?getGameOver@GameManager@df@@QEBA_NXZ</DECORATED>
    <FUNCLINE>80</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>gamemanager.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::GameManager::getFrameTime' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::GameManager::getFrameTime</FUNCTION>
    <DECORATED>?getFrameTime@GameManager@df@@QEBAHXZ</DECORATED>
    <FUNCLINE>84</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.cpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26477</DEFECTCODE>
    <DESCRIPTION>Use 'nullptr' rather than 0 or NULL (es.47).</DESCRIPTION>
    <FUNCTION>df::LogManager::{ctor}</FUNCTION>
    <DECORATED>??0LogManager@df@@AEAA@XZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::LogManager::{ctor}</FUNCTION>
    <DECORATED>??0LogManager@df@@AEAA@XZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class df::LogManager', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>df::LogManager::{dtor}</FUNCTION>
    <DECORATED>??1LogManager@df@@UEAA@XZ</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 3 'args' in call to 'vfprintf' may be invalid (lifetime.1).</DESCRIPTION>
    <FUNCTION>df::LogManager::writeLog</FUNCTION>
    <DECORATED>?writeLog@LogManager@df@@QEBAHPEBDZZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
        <FILENAME>logmanager.cpp</FILENAME>
        <LINE>23</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26477</DEFECTCODE>
    <DESCRIPTION>Use 'nullptr' rather than 0 or NULL (es.47).</DESCRIPTION>
    <FUNCTION>df::LogManager::writeLog</FUNCTION>
    <DECORATED>?writeLog@LogManager@df@@QEBAHPEBDZZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::LogManager::writeLog' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::LogManager::writeLog</FUNCTION>
    <DECORATED>?writeLog@LogManager@df@@QEBAHPEBDZZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'df::LogManager::~LogManager' (i.22).</DESCRIPTION>
    <FUNCTION>`df::LogManager::getInstance'::`2'::`dynamic atexit destructor for 'l_mInstance''</FUNCTION>
    <DECORATED>??__Fl_mInstance@?1??getInstance@LogManager@df@@SAAEAV12@XZ@YAXXZ</DECORATED>
    <FUNCLINE>36</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.cpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'df::LogManager::startUp' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>df::LogManager::startUp</FUNCTION>
    <DECORATED>?startUp@LogManager@df@@UEAAHXZ</DECORATED>
    <FUNCLINE>38</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'df::LogManager::shutDown' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>df::LogManager::shutDown</FUNCTION>
    <DECORATED>?shutDown@LogManager@df@@UEAAXXZ</DECORATED>
    <FUNCLINE>44</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::LogManager::setFlush' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::LogManager::setFlush</FUNCTION>
    <DECORATED>?setFlush@LogManager@df@@QEAAX_N@Z</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>manager.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'df::Manager::is_started' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>df::Manager::{ctor}</FUNCTION>
    <DECORATED>??0Manager@df@@QEAA@XZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>manager.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Manager::{ctor}</FUNCTION>
    <DECORATED>??0Manager@df@@QEAA@XZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>manager.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class df::Manager', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>df::Manager::{dtor}</FUNCTION>
    <DECORATED>??1Manager@df@@UEAA@XZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>manager.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::Manager::startUp' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Manager::startUp</FUNCTION>
    <DECORATED>?startUp@Manager@df@@UEAAHXZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>manager.cpp</FILENAME>
      <LINE>21</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::Manager::shutDown' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Manager::shutDown</FUNCTION>
    <DECORATED>?shutDown@Manager@df@@UEAAXXZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>manager.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::Manager::isStarted' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Manager::isStarted</FUNCTION>
    <DECORATED>?isStarted@Manager@df@@QEBA_NXZ</DECORATED>
    <FUNCLINE>26</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>object.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Object::{ctor}</FUNCTION>
    <DECORATED>??0Object@df@@QEAA@XZ</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>object.cpp</FILENAME>
      <LINE>21</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class df::Object', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>df::Object::{dtor}</FUNCTION>
    <DECORATED>??1Object@df@@UEAA@XZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>object.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'getInstance()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>df::Object::{dtor}</FUNCTION>
    <DECORATED>??1Object@df@@UEAA@XZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>object.cpp</FILENAME>
      <LINE>23</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'removeObject()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>df::Object::{dtor}</FUNCTION>
    <DECORATED>??1Object@df@@UEAA@XZ</DECORATED>
    <FUNCLINE>21</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>object.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::Object::EventHandler' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Object::EventHandler</FUNCTION>
    <DECORATED>?EventHandler@Object@df@@UEAAHPEBVEvent@2@@Z</DECORATED>
    <FUNCLINE>26</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>object.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::Object::setId' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Object::setId</FUNCTION>
    <DECORATED>?setId@Object@df@@QEAAXH@Z</DECORATED>
    <FUNCLINE>30</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>object.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::Object::getId' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Object::getId</FUNCTION>
    <DECORATED>?getId@Object@df@@QEBAHXZ</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>object.cpp</FILENAME>
      <LINE>46</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::Object::setPosition' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Object::setPosition</FUNCTION>
    <DECORATED>?setPosition@Object@df@@QEAAXVVector@@@Z</DECORATED>
    <FUNCLINE>46</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>object.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::Object::getPosition' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::Object::getPosition</FUNCTION>
    <DECORATED>?getPosition@Object@df@@QEBA?AVVector@@XZ</DECORATED>
    <FUNCLINE>49</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'ObjectList::list' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>ObjectList::{ctor}</FUNCTION>
    <DECORATED>??0ObjectList@@QEAA@XZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::{ctor}</FUNCTION>
    <DECORATED>??0ObjectList@@QEAA@XZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '80048' bytes of stack:  exceeds /analyze:stacksize '16384'.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>ObjectList::+</FUNCTION>
    <DECORATED>??HObjectList@@QEAA?AV0@V0@@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>17</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26486</DEFECTCODE>
    <DESCRIPTION>Don't pass a pointer that may be invalid to a function. Parameter 1 'p_o.{vfptr}' in call to 'ObjectList::insert' may be invalid (lifetime.1).</DESCRIPTION>
    <FUNCTION>ObjectList::+</FUNCTION>
    <DECORATED>??HObjectList@@QEAA?AV0@V0@@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
        <FILENAME>objectlist.cpp</FILENAME>
        <LINE>16</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
    </PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>ObjectList::insert</FUNCTION>
    <DECORATED>?insert@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ObjectList::insert</FUNCTION>
    <DECORATED>?insert@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::insert' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::insert</FUNCTION>
    <DECORATED>?insert@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26461</DEFECTCODE>
    <DESCRIPTION>The pointer argument 'p_o' for function 'ObjectList::remove' can be marked as a pointer to const (con.3).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::remove' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::remove</FUNCTION>
    <DECORATED>?remove@ObjectList@@QEAAHPEAVObject@df@@@Z</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::clear' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::clear</FUNCTION>
    <DECORATED>?clear@ObjectList@@QEAAXXZ</DECORATED>
    <FUNCLINE>44</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::getCount' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::getCount</FUNCTION>
    <DECORATED>?getCount@ObjectList@@QEBAHXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::isEmpty' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::isEmpty</FUNCTION>
    <DECORATED>?isEmpty@ObjectList@@QEBA_NXZ</DECORATED>
    <FUNCLINE>52</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlist.cpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectList::isFull' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectList::isFull</FUNCTION>
    <DECORATED>?isFull@ObjectList@@QEBA_NXZ</DECORATED>
    <FUNCLINE>58</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlistiterator.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'ObjectListIterator::index' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>ObjectListIterator::{ctor}</FUNCTION>
    <DECORATED>??0ObjectListIterator@@AEAA@XZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlistiterator.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectListIterator::{ctor}</FUNCTION>
    <DECORATED>??0ObjectListIterator@@AEAA@XZ</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlistiterator.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'ObjectListIterator::index' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>ObjectListIterator::{ctor}</FUNCTION>
    <DECORATED>??0ObjectListIterator@@QEAA@PEBVObjectList@@@Z</DECORATED>
    <FUNCLINE>12</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlistiterator.cpp</FILENAME>
      <LINE>17</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectListIterator::first' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectListIterator::first</FUNCTION>
    <DECORATED>?first@ObjectListIterator@@QEAAXXZ</DECORATED>
    <FUNCLINE>17</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlistiterator.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>ObjectListIterator::currentObject</FUNCTION>
    <DECORATED>?currentObject@ObjectListIterator@@QEBAPEAVObject@df@@XZ</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlistiterator.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>ObjectListIterator::currentObject</FUNCTION>
    <DECORATED>?currentObject@ObjectListIterator@@QEBAPEAVObject@df@@XZ</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>objectlistiterator.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'ObjectListIterator::currentObject' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>ObjectListIterator::currentObject</FUNCTION>
    <DECORATED>?currentObject@ObjectListIterator@@QEBAPEAVObject@df@@XZ</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>vector.cpp</FILENAME>
      <LINE>8</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Vector::Vector' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Vector::{ctor}</FUNCTION>
    <DECORATED>??0Vector@@QEAA@HH@Z</DECORATED>
    <FUNCLINE>8</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>vector.cpp</FILENAME>
      <LINE>13</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Vector::{ctor}</FUNCTION>
    <DECORATED>??0Vector@@QEAA@XZ</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>vector.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Vector::setX' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Vector::setX</FUNCTION>
    <DECORATED>?setX@Vector@@QEAAXH@Z</DECORATED>
    <FUNCLINE>18</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>vector.cpp</FILENAME>
      <LINE>22</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Vector::getX' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Vector::getX</FUNCTION>
    <DECORATED>?getX@Vector@@QEBAHXZ</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>vector.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Vector::setY' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Vector::setY</FUNCTION>
    <DECORATED>?setY@Vector@@QEAAXH@Z</DECORATED>
    <FUNCLINE>26</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>vector.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Vector::getY' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Vector::getY</FUNCTION>
    <DECORATED>?getY@Vector@@QEBAHXZ</DECORATED>
    <FUNCLINE>30</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>vector.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Vector::setXY' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Vector::setXY</FUNCTION>
    <DECORATED>?setXY@Vector@@QEAAXHH@Z</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>27</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'df::GameManager::getInstance' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'g_mngr''</FUNCTION>
    <DECORATED>??__Eg_mngr@@YAXXZ</DECORATED>
    <FUNCLINE>27</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>28</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'df::LogManager::getInstance' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'l_mngr''</FUNCTION>
    <DECORATED>??__El_mngr@@YAXXZ</DECORATED>
    <FUNCLINE>28</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'testObj''</FUNCTION>
    <DECORATED>??__EtestObj@@YAXXZ</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'test_position''</FUNCTION>
    <DECORATED>??__Etest_position@@YAXXZ</DECORATED>
    <FUNCLINE>30</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'test_list''</FUNCTION>
    <DECORATED>??__Etest_list@@YAXXZ</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'testObj2''</FUNCTION>
    <DECORATED>??__EtestObj2@@YAXXZ</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'argv': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>73</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testManager</FUNCTION>
    <DECORATED>?testManager@@YAXXZ</DECORATED>
    <FUNCLINE>64</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>73</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>testManager</FUNCTION>
    <DECORATED>?testManager@@YAXXZ</DECORATED>
    <FUNCLINE>64</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testClock</FUNCTION>
    <DECORATED>?testClock@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>testClock</FUNCTION>
    <DECORATED>?testClock@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>169</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testGameManager</FUNCTION>
    <DECORATED>?testGameManager@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>169</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>testGameManager</FUNCTION>
    <DECORATED>?testGameManager@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>169</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'g_test' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>testGameManager</FUNCTION>
    <DECORATED>?testGameManager@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>worldmanager.cpp</FILENAME>
      <LINE>10</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '40008' bytes of stack:  exceeds /analyze:stacksize '16384'.. This allocation was for a compiler-generated temporary for 'class ObjectList' at line 10.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>df::WorldManager::{ctor}</FUNCTION>
    <DECORATED>??0WorldManager@df@@AEAA@XZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>worldmanager.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '40008' bytes of stack:  exceeds /analyze:stacksize '16384'.. This allocation was for a compiler-generated temporary for 'class ObjectList' at line 11.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>df::WorldManager::{ctor}</FUNCTION>
    <DECORATED>??0WorldManager@df@@AEAA@XZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>worldmanager.cpp</FILENAME>
      <LINE>9</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::WorldManager::{ctor}</FUNCTION>
    <DECORATED>??0WorldManager@df@@AEAA@XZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>worldmanager.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'df::WorldManager::startUp' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>df::WorldManager::startUp</FUNCTION>
    <DECORATED>?startUp@WorldManager@df@@UEAAHXZ</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>worldmanager.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>6262</DEFECTCODE>
    <DESCRIPTION>Function uses '40032' bytes of stack:  exceeds /analyze:stacksize '16384'.  Consider moving some data to heap.</DESCRIPTION>
    <FUNCTION>df::WorldManager::shutDown</FUNCTION>
    <DECORATED>?shutDown@WorldManager@df@@UEAAXXZ</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>worldmanager.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'ol' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>df::WorldManager::shutDown</FUNCTION>
    <DECORATED>?shutDown@WorldManager@df@@UEAAXXZ</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>worldmanager.cpp</FILENAME>
      <LINE>24</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'df::WorldManager::shutDown' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>df::WorldManager::shutDown</FUNCTION>
    <DECORATED>?shutDown@WorldManager@df@@UEAAXXZ</DECORATED>
    <FUNCLINE>24</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>worldmanager.cpp</FILENAME>
      <LINE>41</LINE>
      <COLUMN>29</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'df::WorldManager::getAllObjects' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>df::WorldManager::getAllObjects</FUNCTION>
    <DECORATED>?getAllObjects@WorldManager@df@@QEBA?AVObjectList@@XZ</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>