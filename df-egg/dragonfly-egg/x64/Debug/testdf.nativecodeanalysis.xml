<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.h</FILENAME>
      <LINE>11</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic initializer for 'LOGFILE_NAME''</FUNCTION>
    <DECORATED>??__ELOGFILE_NAME@df@@YAXXZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>logmanager.h</FILENAME>
      <LINE>11</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic atexit destructor for 'LOGFILE_NAME''</FUNCTION>
    <DECORATED>??__FLOGFILE_NAME@df@@YAXXZ</DECORATED>
    <FUNCLINE>11</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic initializer for 'UNDEFINED_EVENT''</FUNCTION>
    <DECORATED>??__EUNDEFINED_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>event.h</FILENAME>
      <LINE>9</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::~basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>df::`dynamic atexit destructor for 'UNDEFINED_EVENT''</FUNCTION>
    <DECORATED>??__FUNDEFINED_EVENT@df@@YAXXZ</DECORATED>
    <FUNCLINE>9</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>27</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'df::GameManager::getInstance' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'g_mngr''</FUNCTION>
    <DECORATED>??__Eg_mngr@@YAXXZ</DECORATED>
    <FUNCLINE>27</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>28</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'df::LogManager::getInstance' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'l_mngr''</FUNCTION>
    <DECORATED>??__El_mngr@@YAXXZ</DECORATED>
    <FUNCLINE>28</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'testObj''</FUNCTION>
    <DECORATED>??__EtestObj@@YAXXZ</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'df::Object::Object' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'testObj''</FUNCTION>
    <DECORATED>??__EtestObj@@YAXXZ</DECORATED>
    <FUNCLINE>29</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>29</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'test_position''</FUNCTION>
    <DECORATED>??__Etest_position@@YAXXZ</DECORATED>
    <FUNCLINE>30</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'Vector::Vector' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'test_position''</FUNCTION>
    <DECORATED>??__Etest_position@@YAXXZ</DECORATED>
    <FUNCLINE>30</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'test_list''</FUNCTION>
    <DECORATED>??__Etest_list@@YAXXZ</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'ObjectList::ObjectList' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'test_list''</FUNCTION>
    <DECORATED>??__Etest_list@@YAXXZ</DECORATED>
    <FUNCLINE>31</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'testObj2''</FUNCTION>
    <DECORATED>??__EtestObj2@@YAXXZ</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'df::Object::Object' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'testObj2''</FUNCTION>
    <DECORATED>??__EtestObj2@@YAXXZ</DECORATED>
    <FUNCLINE>32</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>32</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>34</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'argv': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>main</FUNCTION>
    <DECORATED>main</DECORATED>
    <FUNCLINE>34</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>73</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testManager</FUNCTION>
    <DECORATED>?testManager@@YAXXZ</DECORATED>
    <FUNCLINE>64</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>73</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>testManager</FUNCTION>
    <DECORATED>?testManager@@YAXXZ</DECORATED>
    <FUNCLINE>64</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testClock</FUNCTION>
    <DECORATED>?testClock@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>testClock</FUNCTION>
    <DECORATED>?testClock@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>169</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testGameManager</FUNCTION>
    <DECORATED>?testGameManager@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>169</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>testGameManager</FUNCTION>
    <DECORATED>?testGameManager@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\hsmarch\source\repos\dragonfly\df-egg\dragonfly-egg\</FILEPATH>
      <FILENAME>testdf.cpp</FILENAME>
      <LINE>169</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'g_test' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>testGameManager</FUNCTION>
    <DECORATED>?testGameManager@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>